<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proj21_shoes.mapper.MemberMapper">

	<!-- resultMap type : dto 클래스명 , id : 외부에서 지정할이름? -->
	<!-- result column : db속 컬럼명, property : dto속 변수명 -->


 	 <resultMap type="Member" id="resMember">			
		<id column="member_code" property="memberCode" />									<!-- 회원코드 -->		
		<result column="point" property="point" />											<!-- 	포인트-->
		<result column="cumulative_buy_amount" property="cumulativeBuyAmount" />			<!-- 누적구매금액	 -->
		<result column="quit_state" property="quitState" />									<!-- 탈퇴여부 -->
		<result column="signUp_date" property="signUpDate" />								<!-- 가입일 -->
		<association property="memberId" javaType="MemberDetail"/>							<!-- 회원Id  -->
		<association property="gradeCode" javaType="Grade"/>								<!-- 회원 등급 -->
	</resultMap>
	
	 
	 
	<select id="selectMemberAll"  resultMap="resMember">
		select member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date from member
	</select>


	<insert id="insertMember">
		INSERT INTO member
		(member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date)
		VALUES(#{memberId.memberId}, 1000, 0, 1, false, now());
	</insert>
	
	<select id="selectMemberByMCode" parameterType="int" resultMap="resMember">
		select member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date 
		from member
		where member_code = #{memberCode}	
	</select>
	
	<select id="selectMemberById" resultMap="resMember">
		select member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date 
		from member
		where member_id = #{memberId}	
	</select>	
	
	<update id="updateMember">
		UPDATE member  SET quit_state=1
	    WHERE member_id=#{memberId};
	</update>
	
	<select id="findAll" resultMap="resMember" resultType="SearchCriteria">
		select m.member_code, m.member_id, m.`point`, m.cumulative_buy_amount, m.grade_code, m.quit_state, m.signUp_date, 
		m2.member_id as m2_member_id, m2.member_pwd, m2.member_name, m2.gender, m2.birthday, m2.email, m2.tel, m2.zipCode, m2.address, m2.detail_address, 
		g.grade_code as g_grade_code, g.grade from `member` m join memberdetail m2 on m.member_id = m2.member_id join grade g on m.grade_code = g.grade_code
		where member_code > 0
		<include refid="search"></include>
		order by m.member_code desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<select id="countInfoList" parameterType="SearchCriteria" resultType="int" >
		select count(m.member_code)  from `member` m join memberdetail m2 on m.member_id = m2.member_id 
		where m.member_code > 0
		<include refid="search"></include>
	</select>
	
	<!-- 검색기능을 위한 동적SQL -->
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND m.member_id LIKE CONCAT('%',#{keyword},'%')</if>
			<if test="searchType == 'c'.toString()">AND m2.member_name LIKE CONCAT('%',#{keyword},'%')</if>
			<if test="searchType == 'tc'.toString()">AND (m.member_id LIKE CONCAT('%',#{keyword},'%')) or (m2.member_name LIKE CONCAT('%',#{keyword},'%'))</if>
		</if>
	</sql>
</mapper>



