[DEBUG] [2021-06-17 12:21] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:23] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:26] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:26] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:27] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:27] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:27] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 12:27] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 12:27] <==    Columns: board_code, order_code, image, title, member_id, regist_date
[TRACE] [2021-06-17 12:27] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 17:14:32.0
[DEBUG] [2021-06-17 12:27] <==      Total: 1
[DEBUG] [2021-06-17 12:27] [ReView [boardCode=1, orderCode=null, title=이 가격에 이 퀄리티 리얼?, content=null, registDate=2021-06-15T17:14:32, reviewImages=null]]
[DEBUG] [2021-06-17 12:29] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:29] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 12:29] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 12:29] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 12:29] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 17:14:32.0, 가성비 좋아요~
[DEBUG] [2021-06-17 12:29] <==      Total: 1
[DEBUG] [2021-06-17 12:29] [ReView [boardCode=1, orderCode=null, title=이 가격에 이 퀄리티 리얼?, content=가성비 좋아요~, registDate=2021-06-15T17:14:32, reviewImages=null]]
[DEBUG] [2021-06-17 12:52] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:52] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 12:52] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 12:52] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 12:52] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0, 가성비 좋아요~
[DEBUG] [2021-06-17 12:52] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:52] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 12:52] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 12:52] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 12:52] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0, 가성비 좋아요~
[DEBUG] [2021-06-17 12:55] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:55] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 12:55] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 12:55] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 12:55] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0, 가성비 좋아요~
[DEBUG] [2021-06-17 12:57] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 12:57] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 12:57] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 12:57] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 12:57] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0, 가성비 좋아요~
[DEBUG] [2021-06-17 13:01] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 13:01] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 13:01] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 13:01] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 13:01] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0, 가성비 좋아요~
[DEBUG] [2021-06-17 13:25] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 13:25] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date, r.content from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 13:25] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 13:25] <==    Columns: board_code, order_code, image, title, member_id, regist_date, content
[TRACE] [2021-06-17 13:25] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0, 가성비 좋아요~
[DEBUG] [2021-06-17 13:28] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 13:28] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 13:28] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 13:28] <==    Columns: board_code, order_code, image, title, member_id, regist_date
[TRACE] [2021-06-17 13:28] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0
[DEBUG] [2021-06-17 13:55] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 13:55] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 13:55] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 13:55] <==    Columns: board_code, order_code, image, title, member_id, regist_date
[TRACE] [2021-06-17 13:55] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 16:45:43.0
[DEBUG] [2021-06-17 14:03] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:03] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:03] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:03] <==    Columns: board_code, order_code, image, title, member_id, regist_date
[TRACE] [2021-06-17 14:03] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 17:14:32.0
[DEBUG] [2021-06-17 14:04] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:04] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:04] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:04] <==    Columns: board_code, order_code, image, title, member_id, regist_date
[TRACE] [2021-06-17 14:04] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 17:14:32.0
[DEBUG] [2021-06-17 14:04] <==      Total: 1
[DEBUG] [2021-06-17 14:04] [ReView [boardCode=1, orderCode=null, title=이 가격에 이 퀄리티 리얼?, content=null, registDate=2021-06-15T17:14:32, reviewImages=null]]
[DEBUG] [2021-06-17 14:05] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:05] ==>  Preparing: select r.board_code, r.order_code, r2.image, r.title, m2.member_id, r.regist_date from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:05] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:05] <==    Columns: board_code, order_code, image, title, member_id, regist_date
[TRACE] [2021-06-17 14:05] <==        Row: 1, 10001, DrMartin1-main.jpg, 이 가격에 이 퀄리티 리얼?, aaa, 2021-06-15 17:14:32.0
[DEBUG] [2021-06-17 14:07] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:07] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:07] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:07] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:07] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:13] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:13] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:13] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:13] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:13] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:14] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:14] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:14] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:14] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:14] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:14] <==      Total: 1
[DEBUG] [2021-06-17 14:14] [ReView [boardCode=1, orderCode=null, title=이 가격에 이 퀄리티 리얼?, content=가성비 좋아요~, registDate=2021-06-15T17:14:32, reviewImages=null]]
[DEBUG] [2021-06-17 14:22] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:22] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:22] ==> Parameters: 
[TRACE] [2021-06-17 14:22] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:22] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:22] <==        Row: 10002, 111112, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10002, 테스트2, 42020, 동대구로 386, 킹덤 오피스텔 지하 1층, 010-222-7777, 10002, 22222, 2, 280, 15
[TRACE] [2021-06-17 14:22] <==        Row: 10003, 111113, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10003, 테스트3, 42813, 상화로 373, 비둘기 아파트 2단지, 010-333-6666, 10003, 33333, 3, 230, 20
[TRACE] [2021-06-17 14:22] <==        Row: 10004, 111114, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10004, 테스트4, 41865, 서대구로 30, 맨투맨 빌딩 4층, 010-666-5555, 10004, 55555, 4, 260, 30
[TRACE] [2021-06-17 14:22] <==        Row: 10005, 111115, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10005, 테스트5, 41092, 안심로90길 22, 해피키즈 유치원, 010-999-3333, 10005, 66666, 5, 270, 20
[TRACE] [2021-06-17 14:22] <==        Row: 10006, 111111, 2021-06-15 17:17:05.0, 2247700, 0, null, 0, 10006, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10006, 11111, 1, 270, 20
[TRACE] [2021-06-17 14:22] <==        Row: 10007, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10007, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10007, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:22] <==        Row: 10008, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10008, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10008, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:22] <==        Row: 10009, 111111, 2021-06-15 17:24:20.0, 53099, 0, null, 0, 10009, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10009, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:22] <==        Row: 10010, 111111, 2021-06-15 17:26:58.0, 53100, 0, null, 0, 10010, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10010, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:22] <==        Row: 10011, 111111, 2021-06-15 17:34:03.0, 112410, 0, null, 0, 10011, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10011, 11111, 1, 270, 1
[TRACE] [2021-06-17 14:22] <==        Row: 10012, 111111, 2021-06-15 19:38:08.0, 109934296, 0, null, 0, 10012, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10012, 11111, 1, 270, 978
[TRACE] [2021-06-17 14:22] <==        Row: 10013, 111111, 2021-06-16 10:46:01.0, 743400, 0, null, 0, 10013, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10013, 33333, 3, 230, 14
[TRACE] [2021-06-17 14:22] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:22] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 22222, 2, 280, 10
[TRACE] [2021-06-17 14:22] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 33333, 3, 230, 10
[DEBUG] [2021-06-17 14:22] <==      Total: 16
[DEBUG] [2021-06-17 14:32] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:32] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:32] ==> Parameters: 
[TRACE] [2021-06-17 14:32] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:32] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:32] <==        Row: 10002, 111112, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10002, 테스트2, 42020, 동대구로 386, 킹덤 오피스텔 지하 1층, 010-222-7777, 10002, 22222, 2, 280, 15
[TRACE] [2021-06-17 14:32] <==        Row: 10003, 111113, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10003, 테스트3, 42813, 상화로 373, 비둘기 아파트 2단지, 010-333-6666, 10003, 33333, 3, 230, 20
[TRACE] [2021-06-17 14:32] <==        Row: 10004, 111114, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10004, 테스트4, 41865, 서대구로 30, 맨투맨 빌딩 4층, 010-666-5555, 10004, 55555, 4, 260, 30
[TRACE] [2021-06-17 14:32] <==        Row: 10005, 111115, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10005, 테스트5, 41092, 안심로90길 22, 해피키즈 유치원, 010-999-3333, 10005, 66666, 5, 270, 20
[TRACE] [2021-06-17 14:32] <==        Row: 10006, 111111, 2021-06-15 17:17:05.0, 2247700, 0, null, 0, 10006, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10006, 11111, 1, 270, 20
[TRACE] [2021-06-17 14:32] <==        Row: 10007, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10007, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10007, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:32] <==        Row: 10008, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10008, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10008, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:32] <==        Row: 10009, 111111, 2021-06-15 17:24:20.0, 53099, 0, null, 0, 10009, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10009, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:32] <==        Row: 10010, 111111, 2021-06-15 17:26:58.0, 53100, 0, null, 0, 10010, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10010, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:32] <==        Row: 10011, 111111, 2021-06-15 17:34:03.0, 112410, 0, null, 0, 10011, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10011, 11111, 1, 270, 1
[TRACE] [2021-06-17 14:32] <==        Row: 10012, 111111, 2021-06-15 19:38:08.0, 109934296, 0, null, 0, 10012, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10012, 11111, 1, 270, 978
[TRACE] [2021-06-17 14:32] <==        Row: 10013, 111111, 2021-06-16 10:46:01.0, 743400, 0, null, 0, 10013, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10013, 33333, 3, 230, 14
[TRACE] [2021-06-17 14:32] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:32] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 22222, 2, 280, 10
[TRACE] [2021-06-17 14:32] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 33333, 3, 230, 10
[DEBUG] [2021-06-17 14:32] <==      Total: 16
[DEBUG] [2021-06-17 14:33] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:33] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:33] ==> Parameters: 
[TRACE] [2021-06-17 14:33] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:33] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:33] <==        Row: 10002, 111112, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10002, 테스트2, 42020, 동대구로 386, 킹덤 오피스텔 지하 1층, 010-222-7777, 10002, 22222, 2, 280, 15
[TRACE] [2021-06-17 14:33] <==        Row: 10003, 111113, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10003, 테스트3, 42813, 상화로 373, 비둘기 아파트 2단지, 010-333-6666, 10003, 33333, 3, 230, 20
[TRACE] [2021-06-17 14:33] <==        Row: 10004, 111114, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10004, 테스트4, 41865, 서대구로 30, 맨투맨 빌딩 4층, 010-666-5555, 10004, 55555, 4, 260, 30
[TRACE] [2021-06-17 14:33] <==        Row: 10005, 111115, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10005, 테스트5, 41092, 안심로90길 22, 해피키즈 유치원, 010-999-3333, 10005, 66666, 5, 270, 20
[TRACE] [2021-06-17 14:33] <==        Row: 10006, 111111, 2021-06-15 17:17:05.0, 2247700, 0, null, 0, 10006, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10006, 11111, 1, 270, 20
[TRACE] [2021-06-17 14:33] <==        Row: 10007, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10007, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10007, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:33] <==        Row: 10008, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10008, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10008, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:33] <==        Row: 10009, 111111, 2021-06-15 17:24:20.0, 53099, 0, null, 0, 10009, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10009, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:33] <==        Row: 10010, 111111, 2021-06-15 17:26:58.0, 53100, 0, null, 0, 10010, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10010, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:33] <==        Row: 10011, 111111, 2021-06-15 17:34:03.0, 112410, 0, null, 0, 10011, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10011, 11111, 1, 270, 1
[TRACE] [2021-06-17 14:33] <==        Row: 10012, 111111, 2021-06-15 19:38:08.0, 109934296, 0, null, 0, 10012, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10012, 11111, 1, 270, 978
[TRACE] [2021-06-17 14:33] <==        Row: 10013, 111111, 2021-06-16 10:46:01.0, 743400, 0, null, 0, 10013, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10013, 33333, 3, 230, 14
[TRACE] [2021-06-17 14:33] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:33] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 22222, 2, 280, 10
[TRACE] [2021-06-17 14:33] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 33333, 3, 230, 10
[DEBUG] [2021-06-17 14:33] <==      Total: 16
[DEBUG] [2021-06-17 14:40] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:40] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:40] ==> Parameters: 
[TRACE] [2021-06-17 14:40] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:40] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:40] <==        Row: 10002, 111112, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10002, 테스트2, 42020, 동대구로 386, 킹덤 오피스텔 지하 1층, 010-222-7777, 10002, 22222, 2, 280, 15
[TRACE] [2021-06-17 14:40] <==        Row: 10003, 111113, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10003, 테스트3, 42813, 상화로 373, 비둘기 아파트 2단지, 010-333-6666, 10003, 33333, 3, 230, 20
[TRACE] [2021-06-17 14:40] <==        Row: 10004, 111114, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10004, 테스트4, 41865, 서대구로 30, 맨투맨 빌딩 4층, 010-666-5555, 10004, 55555, 4, 260, 30
[TRACE] [2021-06-17 14:40] <==        Row: 10005, 111115, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10005, 테스트5, 41092, 안심로90길 22, 해피키즈 유치원, 010-999-3333, 10005, 66666, 5, 270, 20
[TRACE] [2021-06-17 14:40] <==        Row: 10006, 111111, 2021-06-15 17:17:05.0, 2247700, 0, null, 0, 10006, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10006, 11111, 1, 270, 20
[TRACE] [2021-06-17 14:40] <==        Row: 10007, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10007, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10007, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10008, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10008, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10008, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10009, 111111, 2021-06-15 17:24:20.0, 53099, 0, null, 0, 10009, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10009, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10010, 111111, 2021-06-15 17:26:58.0, 53100, 0, null, 0, 10010, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10010, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10011, 111111, 2021-06-15 17:34:03.0, 112410, 0, null, 0, 10011, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10011, 11111, 1, 270, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10012, 111111, 2021-06-15 19:38:08.0, 109934296, 0, null, 0, 10012, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10012, 11111, 1, 270, 978
[TRACE] [2021-06-17 14:40] <==        Row: 10013, 111111, 2021-06-16 10:46:01.0, 743400, 0, null, 0, 10013, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10013, 33333, 3, 230, 14
[TRACE] [2021-06-17 14:40] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:40] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 22222, 2, 280, 10
[TRACE] [2021-06-17 14:40] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 33333, 3, 230, 10
[DEBUG] [2021-06-17 14:40] <==      Total: 16
[DEBUG] [2021-06-17 14:40] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:40] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:40] ==> Parameters: 
[TRACE] [2021-06-17 14:40] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:40] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:40] <==        Row: 10002, 111112, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10002, 테스트2, 42020, 동대구로 386, 킹덤 오피스텔 지하 1층, 010-222-7777, 10002, 22222, 2, 280, 15
[TRACE] [2021-06-17 14:40] <==        Row: 10003, 111113, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10003, 테스트3, 42813, 상화로 373, 비둘기 아파트 2단지, 010-333-6666, 10003, 33333, 3, 230, 20
[TRACE] [2021-06-17 14:40] <==        Row: 10004, 111114, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10004, 테스트4, 41865, 서대구로 30, 맨투맨 빌딩 4층, 010-666-5555, 10004, 55555, 4, 260, 30
[TRACE] [2021-06-17 14:40] <==        Row: 10005, 111115, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10005, 테스트5, 41092, 안심로90길 22, 해피키즈 유치원, 010-999-3333, 10005, 66666, 5, 270, 20
[TRACE] [2021-06-17 14:40] <==        Row: 10006, 111111, 2021-06-15 17:17:05.0, 2247700, 0, null, 0, 10006, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10006, 11111, 1, 270, 20
[TRACE] [2021-06-17 14:40] <==        Row: 10007, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10007, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10007, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10008, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10008, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10008, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10009, 111111, 2021-06-15 17:24:20.0, 53099, 0, null, 0, 10009, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10009, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10010, 111111, 2021-06-15 17:26:58.0, 53100, 0, null, 0, 10010, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10010, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10011, 111111, 2021-06-15 17:34:03.0, 112410, 0, null, 0, 10011, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10011, 11111, 1, 270, 1
[TRACE] [2021-06-17 14:40] <==        Row: 10012, 111111, 2021-06-15 19:38:08.0, 109934296, 0, null, 0, 10012, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10012, 11111, 1, 270, 978
[TRACE] [2021-06-17 14:40] <==        Row: 10013, 111111, 2021-06-16 10:46:01.0, 743400, 0, null, 0, 10013, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10013, 33333, 3, 230, 14
[TRACE] [2021-06-17 14:40] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:40] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 22222, 2, 280, 10
[TRACE] [2021-06-17 14:40] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 33333, 3, 230, 10
[DEBUG] [2021-06-17 14:40] <==      Total: 16
[DEBUG] [2021-06-17 14:41] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:41] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:41] ==> Parameters: 
[TRACE] [2021-06-17 14:41] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:41] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[DEBUG] [2021-06-17 14:42] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:42] ==>  Preparing: select * from `order` o join address a2 on a2.order_code = o.order_code join orderproduct o2 on o.order_code = o2.order_code ;
[DEBUG] [2021-06-17 14:42] ==> Parameters: 
[TRACE] [2021-06-17 14:42] <==    Columns: order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, order_code, recipient, zipCode, address, detail_address, tel, order_code, product_code, style_code, size, order_count
[TRACE] [2021-06-17 14:42] <==        Row: 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10001, 테스트1, 41806, 국채보상로 438, 서구 치과의원, 010-111-8888, 10001, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:42] <==        Row: 10002, 111112, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10002, 테스트2, 42020, 동대구로 386, 킹덤 오피스텔 지하 1층, 010-222-7777, 10002, 22222, 2, 280, 15
[TRACE] [2021-06-17 14:42] <==        Row: 10003, 111113, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10003, 테스트3, 42813, 상화로 373, 비둘기 아파트 2단지, 010-333-6666, 10003, 33333, 3, 230, 20
[TRACE] [2021-06-17 14:42] <==        Row: 10004, 111114, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10004, 테스트4, 41865, 서대구로 30, 맨투맨 빌딩 4층, 010-666-5555, 10004, 55555, 4, 260, 30
[TRACE] [2021-06-17 14:42] <==        Row: 10005, 111115, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 10005, 테스트5, 41092, 안심로90길 22, 해피키즈 유치원, 010-999-3333, 10005, 66666, 5, 270, 20
[TRACE] [2021-06-17 14:42] <==        Row: 10006, 111111, 2021-06-15 17:17:05.0, 2247700, 0, null, 0, 10006, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10006, 11111, 1, 270, 20
[TRACE] [2021-06-17 14:42] <==        Row: 10007, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10007, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10007, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:42] <==        Row: 10008, 111111, 2021-06-15 17:19:07.0, 53100, 0, null, 0, 10008, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10008, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:42] <==        Row: 10009, 111111, 2021-06-15 17:24:20.0, 53099, 0, null, 0, 10009, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10009, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:42] <==        Row: 10010, 111111, 2021-06-15 17:26:58.0, 53100, 0, null, 0, 10010, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10010, 33333, 3, 230, 1
[TRACE] [2021-06-17 14:42] <==        Row: 10011, 111111, 2021-06-15 17:34:03.0, 112410, 0, null, 0, 10011, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10011, 11111, 1, 270, 1
[TRACE] [2021-06-17 14:42] <==        Row: 10012, 111111, 2021-06-15 19:38:08.0, 109934296, 0, null, 0, 10012, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10012, 11111, 1, 270, 978
[TRACE] [2021-06-17 14:42] <==        Row: 10013, 111111, 2021-06-16 10:46:01.0, 743400, 0, null, 0, 10013, 테스트1, 12345, 국채보상로 438, 서구 치과의원, 010-111-8888, 10013, 33333, 3, 230, 14
[TRACE] [2021-06-17 14:42] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 11111, 1, 270, 10
[TRACE] [2021-06-17 14:42] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 22222, 2, 280, 10
[TRACE] [2021-06-17 14:42] <==        Row: 10014, 111111, 2021-06-17 12:01:05.0, 10000, 0, null, 0, 10014, asdasd, asdas, asdasd, asdasd, asdasd, 10014, 33333, 3, 230, 10
[DEBUG] [2021-06-17 14:42] <==      Total: 16
[DEBUG] [2021-06-17 14:43] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:43] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:43] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:43] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:43] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:44] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:44] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:44] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:44] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:44] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:44] <==      Total: 1
[DEBUG] [2021-06-17 14:44] [ReView [boardCode=1, orderCode=Order [orderCode=10001, memberCode=Member [memberCode=111111, memberId=null, point=100, cumulativeBuyAmount=10000, gradeCode=null, quitState=false, signUpDate=2021-06-15T17:14:32], orderDate=2021-06-15T17:14:32, paymentAmount=1000, paymentState=false, deliveryCode=배송코드, buyConfirmState=false, orderProduct=[], address=Address [orderCode=10001, recipient=null, zipCode=12345, address=국채보상로 438, detailAddress=서구 치과의원, tel=010-111-8888]], title=이 가격에 이 퀄리티 리얼?, content=가성비 좋아요~, registDate=2021-06-15T17:14:32, reviewImages=null]]
[DEBUG] [2021-06-17 14:44] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:44] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:44] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:44] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:44] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:44] <==      Total: 1
[DEBUG] [2021-06-17 14:44] [ReView [boardCode=1, orderCode=Order [orderCode=10001, memberCode=Member [memberCode=111111, memberId=null, point=100, cumulativeBuyAmount=10000, gradeCode=null, quitState=false, signUpDate=2021-06-15T17:14:32], orderDate=2021-06-15T17:14:32, paymentAmount=1000, paymentState=false, deliveryCode=배송코드, buyConfirmState=false, orderProduct=[], address=Address [orderCode=10001, recipient=null, zipCode=12345, address=국채보상로 438, detailAddress=서구 치과의원, tel=010-111-8888]], title=이 가격에 이 퀄리티 리얼?, content=가성비 좋아요~, registDate=2021-06-15T17:14:32, reviewImages=null]]
[DEBUG] [2021-06-17 14:48] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:48] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:48] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:48] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:48] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 17:14:32.0, 10001, 111111, 2021-06-15 17:14:32.0, 1000, 0, 배송코드, 0, 111111, aaa, 100, 10000, 5, 0, 2021-06-15 17:14:32.0, aaa, *6C362347EBEAA7DF44F6D34884615A35095E80EB, 테스트1, 1, 2021-06-15 17:14:32.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:48] <==      Total: 1
[DEBUG] [2021-06-17 14:48] [ReView [boardCode=1, orderCode=Order [orderCode=10001, memberCode=Member [memberCode=111111, memberId=null, point=100, cumulativeBuyAmount=10000, gradeCode=null, quitState=false, signUpDate=2021-06-15T17:14:32], orderDate=2021-06-15T17:14:32, paymentAmount=1000, paymentState=false, deliveryCode=배송코드, buyConfirmState=false, orderProduct=[], address=Address [orderCode=10001, recipient=null, zipCode=12345, address=국채보상로 438, detailAddress=서구 치과의원, tel=010-111-8888]], title=이 가격에 이 퀄리티 리얼?, content=가성비 좋아요~, registDate=2021-06-15T17:14:32, reviewImages=[ReviewImage [imageCode=1, boardCode=1, image=DrMartin1-main.jpg]]]]
[DEBUG] [2021-06-17 14:51] test01SelectReviewByMemberId()
[DEBUG] [2021-06-17 14:51] ==>  Preparing: select * from review r join `order` o on o.order_code = r.order_code join `member` m on o.member_code = m.member_code join memberdetail m2 on m.member_id = m2.member_id join reviewimage r2 on r.board_code = r2.board_code where m.member_id = ?;
[DEBUG] [2021-06-17 14:51] ==> Parameters: aaa(String)
[TRACE] [2021-06-17 14:51] <==    Columns: board_code, order_code, title, content, regist_date, order_code, member_code, order_date, payment_amount, payment_state, delivery_code, buy_confirm_state, member_code, member_id, point, cumulative_buy_amount, grade_code, quit_state, signUp_date, member_id, member_pwd, member_name, gender, birthday, email, tel, zipCode, address, detail_address, image_code, board_code, image
[TRACE] [2021-06-17 14:51] <==        Row: 1, 10001, 이 가격에 이 퀄리티 리얼?, 가성비 좋아요~, 2021-06-15 16:45:43.0, 10001, 111111, 2021-06-15 16:45:43.0, 1000, 0, 배송코드, 0, 111111, aaa, 1000, 0, 5, 0, 2021-06-15 16:45:43.0, aaa, rootroot, 테스트1, 1, 2021-06-15 16:45:43.0, test1@test.co.kr, 010-111-8888, 12345, 국채보상로 438, 서구 치과의원, 1, 1, DrMartin1-main.jpg
[DEBUG] [2021-06-17 14:51] <==      Total: 1
[DEBUG] [2021-06-17 14:51] [ReView [boardCode=1, orderCode=Order [orderCode=10001, memberCode=Member [memberCode=111111, memberId=null, point=1000, cumulativeBuyAmount=0, gradeCode=null, quitState=false, signUpDate=2021-06-15T16:45:43], orderDate=2021-06-15T16:45:43, paymentAmount=1000, paymentState=false, deliveryCode=배송코드, buyConfirmState=false, orderProduct=[], address=Address [orderCode=10001, recipient=null, zipCode=12345, address=국채보상로 438, detailAddress=서구 치과의원, tel=010-111-8888]], title=이 가격에 이 퀄리티 리얼?, content=가성비 좋아요~, registDate=2021-06-15T16:45:43, reviewImages=[ReviewImage [imageCode=1, boardCode=1, image=DrMartin1-main.jpg]]]]
